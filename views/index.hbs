<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Socket.io</title>

    <style>
      body { margin: 0; padding-bottom: 3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }

      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }

      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #efefef; }
    </style>
</head>
<body>
    <ul id="messages"></ul>
    <form id="comment-form">
        <label for="author">Autor:</label>
        <input type="text" name="author" id="author">
        <label for="comment">Comentario:</label>
        <input type="text" name="comment" id="comment">
        <button type="submit">ENVIAR</button>

    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io("http://localhost:3000");
        const messageForm = document.getElementById("comment-form");

        //implementacao do evento  onsubmit para enviar os dados
        messageForm.onsubmit = function(event){
            // previne o recarregamento da pagina ao submeter o formulario
            event.preventDefault();
            
            const author = document.getElementById("author").value;
            const comment = document.getElementById("comment").value;
            const data = {author,comment};
            
            renderMessage(data);

            socket.emit("sendMessage", data);

        }

        socket.on("allMessages", (data) => {
            console.log(data);
            renderElement(data);
        });
        
        const renderElement = (message) => {
            message.server = true;
            renderMessage(message);
        }

        //lista de mensagens
        const messagesList = document.getElementById("messages");
        const renderMessage = (message) => {
            const element = document.createElement('li');
            element.innerHTML = `[${message.server ? "SERVIDOR" : "EU"}] <strong>${message.author}</strong>: ${message.comment}`;
            messagesList.append(element);
        }
      

    </script>
</body>
</html>